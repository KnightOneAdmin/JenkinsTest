apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.knight.jenkinstest"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {  //添加我们签名文件配置
        releaseConfig {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PWD
            keyAlias KEY_ALIAS
            keyPassword KEY_PWD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.releaseConfig
        }
        debug {
            minifyEnabled false
        }
    }
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    //修改生成的apk名字  //主要内容就是判断是否由Jenkins构建,如果是那就根据对应参数生成apk到对应目录,否则正常输出到本地apk目录
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    //如果不是jenkins就不用修改路径
                    if ("false".equals(IS_JENKINS)) {
                        // apk_渠道名-版本号-版本名称-编译时间.apk
                        def fileName = "apkName_${defaultConfig.versionName}_${releaseTime()}_${variant.flavorName}.apk"
                        outputFileName = fileName
                    } else {
                        def fileName = "apkName_${RELEASE_TIME}_${APP_VERSION}_${PRODUCT_FLAVOR}.apk"
                        //Jenkins输出路径
                        output.outputFile = new File("/Users/knightoneadmin/MyResources/Desktop/FileInstall/apk", fileName)
                    }
                }
            }
        }
    }

    //多渠道打包
    flavorDimensions("money", "channel")
    productFlavors {
        vip {
            dimension "money"
        }
        free {
            dimension "money"
        }
        baidu {
            manifestPlaceholders = [CHANNEL: "baidu"]
            dimension "channel"
        }
        xiaomi {
            manifestPlaceholders = [CHANNEL: "xiaomi"]
            dimension "channel"
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    /*友盟统计需要的最新版本组件化基础库和统计SDK*/
    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.sdk:analytics:latest.integration'
}
